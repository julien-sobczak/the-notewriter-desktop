@import url('https://fonts.googleapis.com/css2?family=Noto+Emoji&family=Poiret+One&family=Roboto:ital,wght@0,400;0,500;0,700;0,900;1,400;1,500;1,700;1,900&display=swap');

:root{
  --color-separator: #DDD;
  --color-background-light: #F9F9F9;
  --color-text-dimmed: gray;
}

/*
 * @NOTE: Prepend a `~` to css file paths that are in your node_modules
 *        See https://github.com/webpack-contrib/sass-loader#imports
 */
body {
  position: relative;
  color: black;
  height: 100vh;
  font-family: sans-serif;
  overflow-y: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

a:hover {
  opacity: 1;
  text-decoration: none;
}

#root {
  width: 100%;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

button {
  all: unset;
  cursor: pointer;
}

button:focus {
  outline: revert;
}

/* <DailyQuote> */

.DailyQuote {
  width: 100%;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: 'Poiret One', cursive;
  font-size: 1.5rem;
  padding: 4rem;
}

.Workspace {
  width: 100%;
  height: 100vh;
}

.Main {
  display: flex;
  height: 100%;
}

.TopBar {
  padding: 0.25rem;
  height: 2rem;
  text-align: center;
  font-size: 0.70em;
  border-bottom: 1px solid var(--color-separator);
}
.TopBar input {
  border-radius: 0.25rem;
  border: 1px solid var(--color-separator) !important;
  box-shadow: none !important;
  background-color: var(--color-background-light);
  width: 300px;
}
.TopBar input::placeholder {
  color: var(--color-text-dimmed);
  text-align: center;
}
.TopBar .WorkspaceButtonGroup {
  float: right;
}
.TopBar .WorkspaceButtonGroup button {
  padding: 0.25rem 0.5rem;
  margin: 0 0.1rem;
  background: transparent;
  border: none;
  color: var(--color-text-dimmed);
  border: 1px solid white;
}
.TopBar .WorkspaceButtonGroup button.selected {
  border: 1px solid black;
  color: black;
  border-radius: 0.25rem;
}

.ActivityBar {
  width: 48px;
  height: 100%;
  border-right: 1px solid var(--color-separator);
}
.ActivityBar ul {
  display: flex;
  flex-direction: column;
  padding: 0;
  margin: 0;
}
.ActivityBar li {
  list-style-type: none;
  align-items: center;
  justify-content: center;
  display: flex;
  width: 48px;
  height: 48px;
  font-size: 24px;
  color: var(--color-text-dimmed);
}
.ActivityBar li.selected {
  color: black;
}

/* Note */

.RenderedNote {
  border: 1px solid var(--color-separator);
  background: white;
  margin: 1em;
  overflow: hidden;
}
.RenderedNoteTitle,
.RenderedNoteContent {
  padding: 0 1em;
}
.RenderedNoteContent {
  max-height: 20em;
  overflow: auto; /* show scrollbar only when needed */
}
.RenderedNoteMetadata {
  background: white;
}
.RenderedNoteMetadata ul,
.Actions ul {
  display: flex;
  flex-direction: row;
  margin: 0;
  padding: 0;
}
.Actions ul {
  justify-content: flex-end;
}
.RenderedNoteMetadata ul li,
.Actions ul li {
  list-style-type: none;
  margin: 0.25em 0.5em;
  padding: 0.25em;
  border-radius: 0.25em;
}

.RenderedNoteMetadata li {
  font-family: monospace;
  font-size: 0.8em;
  background: var(--color-background-light);
  color: var(--color-text-dimmed);
}

.Hello {
  background-color: black;
  display: none; /* FIXME remove, only keep there to have an example of how to include an image */
}

/* Resizing based on https://stackoverflow.com/questions/46044589/dynamically-resize-columns-in-css-grid-layout-with-mouse */
.Grid {
  width: 100%;
  height: 100vh;
}
.Grid, .Container, .HorizontalPane, .VerticalPane {
  display: flex;
  position: relative;
  border: 1px solid silver;
  border-radius: 1rem;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  margin: 1rem;
  overflow: auto;
  padding-top: 1.5rem;
  flex-grow: 1; /* Fill space equally */
}
.Grid, .Container, .VerticalPane {
  flex-direction: column;
}
.HorizontalPane {
  flex-direction: row;
}
.Grid > * {
  resize: horizontal;
}
.HorizontalPane > * {
  resize: horizontal;
}
.VerticalPane > * {
  resize: vertical;
}
.Note {
  padding: 1em;
  margin: 1em;
}



/* Browser */

.Browser {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.BrowserTree {
  height: 100%;
  font-size: 0.9em;
  border-right: 1px solid var(--color-separator);
}
.BrowserTree select {
  float: right;
  border: none;
}
.BrowserEditor {
  height: 100%;
  overflow: scroll;
  flex-grow: 2; /* Use remaining space */
  background-color: var(--color-background-light);
}


/* See https://dgreene1.github.io/react-accessible-treeview/docs/examples-DirectoryTree */

.directory {
  user-select: none;
  padding: 20px;
  border-radius: 0.4em;
}

.directory .tree,
.directory .tree-node,
.directory .tree-node-group {
  list-style: none;
  margin: 0;
  padding: 0;
}

.directory .tree-branch-wrapper,
.directory .tree-node__leaf {
  outline: none;
  outline: none;
}

.directory .tree-node {
  cursor: pointer;
}

.directory .tree-node:hover {
  background: rgba(255, 255, 255, 0.1);
}

.directory .tree .tree-node--focused {
  background: rgba(255, 255, 255, 0.2);
}

.directory .tree .tree-node--selected {
  font-weight: 600;
}

.directory .tree-node__branch {
  display: block;
}

.directory .icon {
  vertical-align: middle;
  padding-right: 5px;
  display: inline-block;
}


/* NoteContainer */

.NoteContainer .Content {
  display: flex;
}
.NoteContainer .Content.LayoutGrid {
  flex-wrap: wrap;
}
.NoteContainer .Content.LayoutList {
  display: flex;
  flex-direction: column;
}
.NoteContainer .Content.LayoutList {
  display: block;
  position: relative; /* Notes will be positioned using static values */
}
.LayoutGrid > .RenderedNote {
  width: 20em;
}
.LayoutList > .RenderedNote {
  /* flex-direction is already columns */
}

